{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"simply_ETL Project Overview","text":"<p>This project is simple ETL pipeline for transform data from multiple source files (csv, json, xml) to one csv file.</p>"},{"location":"#what-is-etl","title":"What is ETL?","text":"<p>ETL mean Extract, Transform and Load. - Extract: Get data from sources - Transform: Change data to needed form - Load: Save data to target file or database</p>"},{"location":"#data-sources","title":"Data sources","text":"<p>We use three type files: - CSV (source1.csv, source2.csv, source3.csv) - JSON (source1.json, source2.json, source3.json) - XML (source.xml)</p> <p>All files contain same data but different formats.</p>"},{"location":"#etl-process-schema","title":"ETL process schema","text":"<p>Below image shows ETL steps in pipeline: </p> <ul> <li>First we extract data from all source files  </li> <li>Then transform heights and weights units  </li> <li>Finally load all data to <code>transformed_data.csv</code></li> </ul>"},{"location":"pipline/","title":"simply_ETL Pipeline Steps","text":"<p>This is simple description of ETL pipeline for this project.</p>"},{"location":"pipline/#1-extract-step","title":"1. Extract step","text":"<ul> <li>Scan current folder for CSV, JSON and XML files  </li> <li>Read data from each file type using different functions  </li> <li>Combine all data to one big DataFrame  </li> </ul>"},{"location":"pipline/#2-transform-step","title":"2. Transform step","text":"<ul> <li>Convert height from inches to meters (1 inch = 0.0254 meters)  </li> <li>Convert weight from pounds to kilograms (1 pound = 0.45359237 kg)  </li> <li>Round values to 2 decimal points  </li> </ul>"},{"location":"pipline/#3-load-step","title":"3. Load step","text":"<ul> <li>Save the transformed DataFrame to CSV file called <code>transformed_data.csv</code> </li> </ul>"},{"location":"pipline/#4-logging","title":"4. Logging","text":"<ul> <li>Each phase (extract, transform, load) is logged with timestamp to <code>log_file.txt</code> </li> <li>Helps to track progress and debugging  </li> </ul> <p>You can run the ETL by executing <code>etl.py</code> script in terminal.</p>"}]}